# Generated by Django 5.1.3 on 2025-01-17 01:58

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("api", "0002_medicalprofessional_departments_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="GPPractice",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("registration_number", models.CharField(max_length=50, unique=True)),
                ("address", models.TextField()),
                ("contact_number", models.CharField(max_length=20)),
                ("email", models.EmailField(max_length=254)),
                ("capacity", models.IntegerField()),
                ("is_accepting_patients", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="ResearchField",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField()),
                ("category", models.CharField(max_length=100)),
                ("required_qualifications", models.JSONField()),
                ("ethical_guidelines", models.JSONField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("is_active", models.BooleanField(default=True)),
            ],
        ),
        migrations.AddField(
            model_name="appointment",
            name="appointment_type",
            field=models.CharField(
                choices=[
                    ("GP_ROUTINE", "GP Routine"),
                    ("GP_FOLLOWUP", "GP Follow-up"),
                    ("SPECIALIST", "Specialist"),
                    ("EMERGENCY", "Emergency"),
                    ("VACCINATION", "Vaccination"),
                    ("SCREENING", "Screening"),
                ],
                default="GP_ROUTINE",
                max_length=50,
            ),
        ),
        migrations.AddField(
            model_name="appointment",
            name="booking_method",
            field=models.CharField(
                choices=[
                    ("PHONE", "Phone"),
                    ("ONLINE", "Online"),
                    ("GP_REFERRAL", "GP Referral"),
                    ("EMERGENCY", "Emergency"),
                ],
                default="ONLINE",
                max_length=20,
            ),
        ),
        migrations.AddField(
            model_name="appointment",
            name="priority_level",
            field=models.CharField(
                choices=[
                    ("ROUTINE", "Routine"),
                    ("URGENT", "Urgent"),
                    ("EMERGENCY", "Emergency"),
                ],
                default="ROUTINE",
                max_length=20,
            ),
        ),
        migrations.AddField(
            model_name="userprofile",
            name="has_registered_gp",
            field=models.BooleanField(default=False),
        ),
        migrations.CreateModel(
            name="GeneralPractitioner",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("license_number", models.CharField(max_length=50, unique=True)),
                ("specializations", models.JSONField()),
                ("availability_schedule", models.JSONField()),
                ("max_daily_appointments", models.IntegerField(default=20)),
                ("is_accepting_appointments", models.BooleanField(default=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "practice",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.gppractice"
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="appointment",
            name="gp",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="api.generalpractitioner",
            ),
        ),
        migrations.AddField(
            model_name="userprofile",
            name="current_gp_practice",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="registered_patients",
                to="api.gppractice",
            ),
        ),
        migrations.CreateModel(
            name="InitialConsultation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("consultation_date", models.DateTimeField()),
                ("chief_complaint", models.TextField()),
                ("symptoms", models.JSONField()),
                ("initial_assessment", models.TextField()),
                (
                    "priority_level",
                    models.CharField(
                        choices=[
                            ("ROUTINE", "Routine"),
                            ("URGENT", "Urgent"),
                            ("EMERGENCY", "Emergency"),
                        ],
                        max_length=20,
                    ),
                ),
                ("referral_needed", models.BooleanField(default=False)),
                (
                    "referral_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("SPECIALIST", "Specialist"),
                            ("LABORATORY", "Laboratory"),
                            ("PHARMACY", "Pharmacy"),
                            ("HOSPITAL", "Hospital"),
                        ],
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "gp",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.generalpractitioner",
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="appointment",
            name="initial_consultation",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="api.initialconsultation",
            ),
        ),
        migrations.CreateModel(
            name="PatientGPRegistration",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("registration_date", models.DateTimeField(auto_now_add=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ACTIVE", "Active"),
                            ("PENDING", "Pending"),
                            ("TRANSFERRED", "Transferred"),
                            ("INACTIVE", "Inactive"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "gp",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="api.generalpractitioner",
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "practice",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.gppractice"
                    ),
                ),
                (
                    "previous_practice",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="transferred_patients",
                        to="api.gppractice",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Referral",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "referral_type",
                    models.CharField(
                        choices=[
                            ("SPECIALIST", "Specialist"),
                            ("LABORATORY", "Laboratory"),
                            ("PHARMACY", "Pharmacy"),
                            ("HOSPITAL", "Hospital"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("ROUTINE", "Routine"),
                            ("URGENT", "Urgent"),
                            ("EMERGENCY", "Emergency"),
                        ],
                        max_length=20,
                    ),
                ),
                ("reason", models.TextField()),
                ("notes", models.TextField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("ACCEPTED", "Accepted"),
                            ("COMPLETED", "Completed"),
                            ("REJECTED", "Rejected"),
                        ],
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "referring_gp",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.generalpractitioner",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="appointment",
            name="referral",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="api.referral",
            ),
        ),
        migrations.CreateModel(
            name="ResearchCollaboration",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("collaboration_type", models.CharField(max_length=100)),
                ("start_date", models.DateField()),
                ("end_date", models.DateField(blank=True, null=True)),
                ("responsibilities", models.JSONField()),
                ("resources_committed", models.JSONField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ACTIVE", "Active"),
                            ("PENDING", "Pending"),
                            ("COMPLETED", "Completed"),
                            ("TERMINATED", "Terminated"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "institution",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.hospital"
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.researchproject",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ResearchEthicsApproval",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("application_date", models.DateTimeField(auto_now_add=True)),
                (
                    "approval_status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending Review"),
                            ("APPROVED", "Approved"),
                            ("REJECTED", "Rejected"),
                            ("REVISIONS", "Needs Revisions"),
                        ],
                        max_length=20,
                    ),
                ),
                ("committee_feedback", models.TextField(blank=True, null=True)),
                ("approval_date", models.DateTimeField(blank=True, null=True)),
                ("expiry_date", models.DateTimeField(blank=True, null=True)),
                (
                    "project",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.researchproject",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ResearchFunding",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("funding_source", models.CharField(max_length=200)),
                ("amount", models.DecimalField(decimal_places=2, max_digits=12)),
                ("start_date", models.DateField()),
                ("end_date", models.DateField()),
                ("requirements", models.JSONField()),
                ("reporting_schedule", models.JSONField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ACTIVE", "Active"),
                            ("PENDING", "Pending"),
                            ("COMPLETED", "Completed"),
                            ("TERMINATED", "Terminated"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.researchproject",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ResearchMethodology",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField()),
                ("steps", models.JSONField()),
                ("required_resources", models.JSONField()),
                ("validation_criteria", models.JSONField()),
                (
                    "field",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.researchfield",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="WaitingList",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("service_type", models.CharField(max_length=100)),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("ROUTINE", "Routine"),
                            ("URGENT", "Urgent"),
                            ("EMERGENCY", "Emergency"),
                        ],
                        max_length=20,
                    ),
                ),
                ("added_date", models.DateTimeField(auto_now_add=True)),
                ("estimated_wait_time", models.DurationField()),
                ("notes", models.TextField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ACTIVE", "Active"),
                            ("SCHEDULED", "Scheduled"),
                            ("CANCELLED", "Cancelled"),
                            ("COMPLETED", "Completed"),
                        ],
                        max_length=20,
                    ),
                ),
                ("scheduled_date", models.DateTimeField(blank=True, null=True)),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "scheduled_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="api.medicalprofessional",
                    ),
                ),
            ],
        ),
    ]
